{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/app.js","src/scripts/components/Animation.js","src/scripts/components/Benzene.js","src/scripts/components/Canvas.js","src/scripts/components/Hexagone.js","src/scripts/components/Molecule.js","src/scripts/components/Mouse.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Animation from './components/Animation'\n\nnew Animation()\n","import Canvas from './Canvas'\nimport Mouse  from './Mouse'\n\nimport { $canvas }   from './Canvas'\nimport { molecules } from './Canvas'\n\nconst canvas = new Canvas(molecules)\nconst mouse  = new Mouse()\n\nexport default class Animation\n{\n    constructor()\n    {\n        this.setAnimation()\n    }\n\n    setAnimation()\n    {\n        // Set animation frame\n        if (!Modernizr.touchevents)\n        {\n            if ($canvas != undefined)\n            {\n                const loop = () =>\n                {\n                    canvas.setFrame()\n                    mouse.setMovement()\n                    window.requestAnimationFrame(loop)\n                }\n                loop()\n            }\n            else\n            {\n                const loop = () =>\n                {\n                    mouse.setMovement()\n                    window.requestAnimationFrame(loop)\n                }\n                loop()\n            }\n        }\n        else\n        {\n            let alphaAngle = 0\n            let betaAngle  = 90\n            let gammaAngle = 0\n\n            // Reduce angle to [0deg, 360deg[\n            const moduloAngle = (angle) =>\n            {\n                return ((angle % 360)+ 360) % 360\n            }\n\n            // Reduce angle to [-180deg, 180deg[\n            const reduceAngle = (angle) =>\n            {\n                return (moduloAngle(angle) + 180) % 360 - 180\n            }\n\n            // Listen to device orientation\n            window.addEventListener('deviceorientation', (event) =>\n            {\n                alphaAngle = event.alpha\n                betaAngle  = event.beta\n                gammaAngle = event.gamma\n            })\n\n            if ($canvas != undefined)\n            {\n                const loop = () =>\n                {\n                    // Move molecule\n                    for (const molecule of molecules)\n                    {\n                        molecule.x += reduceAngle(gammaAngle) * 0.005\n                        molecule.rotate = Math.abs(molecule.rotate) * (moduloAngle(gammaAngle) > 180 ? - 1 : 1)\n                    }\n                    canvas.setFrame()\n                    window.requestAnimationFrame(loop)\n                }\n                loop()\n            }\n        }\n    }\n}","import Hexagone from './Hexagone'\n\nimport { context } from './Canvas'\n\nexport default class Benzene\n{\n    constructor(x, y, radius, height, ratio, bond, removed)\n    {\n        this.x       = x\n        this.y       = y\n        this.radius  = radius\n        this.height  = height\n        this.ratio   = ratio\n        this.bond    = bond\n        this.removed = removed\n        this.draw()\n    }\n\n    draw()\n    {\n        // Hexagone\n        const hexagone = new Hexagone(this.x, this.y, this.radius, false, true)\n\n        // Double bond\n        context.beginPath()\n        if (this.removed != 'top-right')\n        {\n            context.moveTo(this.x + this.ratio,     this.y)\n            context.lineTo(this.x + this.ratio / 2, this.y - this.bond)\n        }\n        if (this.removed != 'top-left')\n        {\n            context.moveTo(this.x - this.ratio / 2, this.y - this.bond)\n            context.lineTo(this.x - this.ratio,     this.y)\n        }\n        if (this.removed != 'bottom')\n        {\n            context.moveTo(this.x - this.ratio / 2, this.y + this.bond)\n            context.lineTo(this.x + this.ratio / 2, this.y + this.bond)\n        }\n        context.lineWidth = this.radius / 25\n        context.stroke()\n        context.closePath()\n    }\n}","import Molecule from './Molecule'\n\n// Get canvas\nexport const $canvas = document.querySelector('canvas')\nexport const context = $canvas != undefined ? $canvas.getContext('2d') : undefined\n\n// Create molecules\nconst number    = Math.round((screen.width + screen.height) / 2 / 100)\nconst molecules = new Array()\nfor (let i = 0; i < number; i++)\n{\n    const benzene    = new Molecule('benzene')\n    const naphtalene = new Molecule('naphtalene')\n    const diphenyle  = new Molecule('diphenyle')\n    const styrene    = new Molecule('styrene')\n    const coronene   = new Molecule('coronene')\n    molecules.push(benzene)\n    molecules.push(naphtalene)\n    molecules.push(diphenyle)\n    molecules.push(styrene)\n    molecules.push(coronene)\n}\nexport { molecules as molecules }\n\nexport default class Canvas\n{\n    constructor(molecules)\n    {\n        if ($canvas != undefined)\n        {\n            this.molecules = molecules\n            this.setResize()\n        }\n    }\n\n    setResize()\n    {\n        // Resize canvas\n        const resize = () =>\n        {\n            $canvas.width  = window.innerWidth\n            $canvas.height = window.innerHeight\n            this.largest   = Math.max($canvas.width, $canvas.height)\n            $canvas.style.position = 'absolute'\n        }\n        resize()\n        \n        window.addEventListener('resize', resize)\n    }\n    \n    setFrame()\n    {\n        context.clearRect(0, 0, $canvas.width, $canvas.height)\n\n        // Draw molecules\n        for (const molecule of this.molecules)\n        {\n            const opacity = 1 - (molecule.y + molecule.size) / $canvas.height\n            context.strokeStyle = `rgba(255, 255, 255, ${opacity})`\n            molecule.draw()\n\n            // Update parameters\n            molecule.translate = Math.E ** (((molecule.y + $canvas.height) / (2 * $canvas.height)) * molecule.speed)\n            molecule.y     += molecule.translate\n            molecule.angle += molecule.rotate\n            if\n            (\n                molecule.x + molecule.size < 0             ||\n                molecule.x - molecule.size > $canvas.width ||\n                molecule.y - molecule.size > $canvas.height\n            )\n            {\n                molecule.init()\n            }\n        }\n    }\n}","import { context } from './Canvas'\n\nexport default class Hexagone\n{\n    constructor(x, y, radius, fill, stroke)\n    {\n        this.x      = x\n        this.y      = y\n        this.radius = radius\n        this.height = Math.sqrt(this.radius ** 2 - (this.radius / 2) ** 2)\n        this.fill   = fill\n        this.stroke = stroke\n        this.draw()\n    }\n\n    draw()\n    {\n        // Draw hexagone\n        context.beginPath()\n        context.moveTo(this.x + this.radius,     this.y)\n        context.lineTo(this.x + this.radius / 2, this.y - this.height)\n        context.lineTo(this.x - this.radius / 2, this.y - this.height)\n        context.lineTo(this.x - this.radius,     this.y)\n        context.lineTo(this.x - this.radius / 2, this.y + this.height)\n        context.lineTo(this.x + this.radius / 2, this.y + this.height)\n        context.lineTo(this.x + this.radius,     this.y)\n        if (this.fill)\n        {\n            context.fill()\n        }\n        if (this.stroke)\n        {    \n            context.lineWidth = this.radius / 25\n            context.stroke()\n        }\n        context.closePath()\n    }\n}","import Benzene from './Benzene'\n\nimport { $canvas } from './Canvas'\nimport { context } from './Canvas'\n\nexport default class Molecule\n{\n    constructor(name)\n    {\n        if ($canvas != undefined)\n        {\n            $canvas.width  = window.innerWidth\n            $canvas.height = window.innerHeight\n            this.translate = 0\n            this.name      = name\n            this.init()\n            this.draw()\n        }\n    }\n\n    init()\n    {\n        // Initialize parameters\n        this.radius = Math.floor(Math.random() * 12.5 + 12.5)\n        this.x      = Math.floor(Math.random() * $canvas.width)\n        this.y      = - this.radius - Math.floor(Math.random() * $canvas.height)\n        this.height = Math.sqrt(this.radius ** 2 - (this.radius / 2) ** 2)\n        this.ratio  = this.radius * 0.75\n        this.bond   = Math.sqrt((this.radius * 0.75) ** 2 - ((this.radius * 0.75 )/ 2) ** 2)\n        this.angle  = Math.floor(Math.random() * Math.PI)\n        this.rotate = (Math.floor(Math.random() * 10) / 1000) * (this.x < $canvas.width / 2 ? - 1 : 1)\n        this.speed  = Math.floor(Math.random() * 1.25) + 1.25\n    }\n\n    draw()\n    {\n        // Draw molecule\n        context.save()\n        context.translate(this.x, this.y)\n        context.rotate(this.angle)\n        context.translate(- this.x, - this.y)\n\n        if (this.name == 'benzene')\n        {\n            const benzene = new Benzene(this.x, this.y, this.radius, this.height, this.ratio, this.bond, undefined)\n            this.size = this.radius\n        }\n        else if (this.name == 'naphtalene')\n        {\n            const benzene_1 = new Benzene(this.x, this.y - this.height, this.radius, this.height,   this.ratio,   this.bond, undefined)\n            const benzene_2 = new Benzene(this.x, this.y + this.height, this.radius, this.height, - this.ratio, - this.bond, 'bottom')\n            this.size = this.radius * 4\n        }\n        else if (this.name == 'diphenyle')\n        {\n            const benzene_1 = new Benzene(this.x - this.radius * 1.5, this.y, this.radius, this.height,   this.ratio,   this.bond, undefined)\n            const benzene_2 = new Benzene(this.x + this.radius * 1.5, this.y, this.radius, this.height, - this.ratio, - this.bond, undefined)\n            context.beginPath()\n            context.moveTo(this.x - this.radius / 2, this.y)\n            context.lineTo(this.x + this.radius / 2, this.y)\n            context.stroke()\n            context.closePath()\n            this.size = this.radius * 5\n        }\n        else if (this.name == 'styrene')\n        {\n            const benzene = new Benzene(this.x, this.y, this.radius, this.height, this.ratio, this.bond, undefined)\n            context.beginPath()\n            context.moveTo(this.x + this.radius,                      this.y)\n            context.lineTo(this.x + this.radius * 2,                  this.y)\n            context.lineTo(this.x + this.radius * 2.5,                this.y + this.height)\n            context.moveTo(this.x + this.radius * 3 - this.ratio,     this.y)\n            context.lineTo(this.x + this.radius * 3 - this.ratio / 2, this.y + this.bond)\n            context.stroke()\n            context.closePath()\n            this.size = this.radius * 4\n        }\n        else if (this.name == 'coronene')\n        {\n            const benzene_1 = new Benzene(this.x,                     this.y - this.height * 2, this.radius, this.height, - this.ratio, - this.bond, 'top-left')\n            const benzene_2 = new Benzene(this.x - this.radius * 1.5, this.y - this.height,     this.radius, this.height,   this.ratio,   this.bond, 'top-right')\n            const benzene_3 = new Benzene(this.x - this.radius * 1.5, this.y + this.height,     this.radius, this.height, - this.ratio, - this.bond, 'bottom')\n            const benzene_4 = new Benzene(this.x,                     this.y + this.height * 2, this.radius, this.height,   this.ratio,   this.bond, 'top-left')\n            const benzene_5 = new Benzene(this.x + this.radius * 1.5, this.y + this.height,     this.radius, this.height, - this.ratio, - this.bond, 'top-right')\n            const benzene_6 = new Benzene(this.x + this.radius * 1.5, this.y - this.height,     this.radius, this.height,   this.ratio,   this.bond, 'bottom')\n            this.size = this.radius * 6\n        }\n        context.restore()\n    }\n}","import { molecules } from './Canvas'\n\nexport default class Mouse\n{\n    constructor()\n    {\n        if (!Modernizr.touchevents)\n        {\n            this.setSettings()\n            this.moveMouse()\n            this.setMovement()\n        }\n    }\n\n    setSettings()\n    {\n        // Create elements\n        const $body       = document.body\n        const $mouse      = document.createElement('div')\n        const $pointer    = document.createElement('div')\n        const $particles  = document.createElement('div')\n        const $particle_1 = document.createElement('div')\n        const $particle_2 = document.createElement('div')\n        const $particle_3 = document.createElement('div')\n\n        // Add classes\n        $mouse.classList.add('mouse')\n        $pointer.classList.add('pointer')\n        $particles.classList.add('particles')\n        $particle_1.classList.add('particle')\n        $particle_2.classList.add('particle')\n        $particle_3.classList.add('particle')\n        $particle_1.classList.add('index-1')\n        $particle_2.classList.add('index-2')\n        $particle_3.classList.add('index-3')\n\n        // Add elements\n        $particles.appendChild($particle_1)\n        $particles.appendChild($particle_2)\n        $particles.appendChild($particle_3)\n        $mouse.appendChild($pointer)\n        $mouse.appendChild($particles)\n        $body.insertBefore($mouse, $body.firstChild)\n\n        // Get elements\n        this.mouse     = $mouse\n        this.pointer   = $pointer\n        this.particles = $particles\n\n        // Get positions\n        this.position = { x : window.innerWidth / 2, y : window.innerHeight / 2 }\n        this.offset   = { x : window.innerWidth / 2, y : window.innerHeight / 2 }\n    }\n\n    moveMouse()\n    {\n        // Update mouse position\n        window.addEventListener('mousemove', (event) =>\n        {\n            this.position.x = event.clientX\n            this.position.y = event.clientY\n        })\n    }\n\n    setMovement()\n    {\n        // Move molecule\n        for (const molecule of molecules)\n        {\n            molecule.x += (molecule.x - this.offset.x) * 0.0025\n            molecule.rotate = Math.abs(molecule.rotate) * (molecule.x < this.position.x ? - 1 : 1)\n        }\n\n        // Set easings\n        this.offset.x += (this.position.x - this.offset.x) * 0.05\n        this.offset.y += (this.position.y - this.offset.y) * 0.05\n\n        // Set positions\n        this.pointer.style.transform   = `translate(${this.position.x}px, ${this.position.y}px)`\n        this.particles.style.transform = `translate(${this.offset.x}px, ${this.offset.y}px)`\n    }\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}